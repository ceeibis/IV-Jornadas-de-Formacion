%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: promoter.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR10 CMR8 CMMI8 CMSS17 CMBX10 CMTI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o promoter.ps promoter.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.12.12:1342
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 74afc74c.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmbxti10 cmff10 cmfi10 cmfib8 cmti10 cmti12 cmti7 cmti8cmti9 cmu10
%
/TeX74afc74cEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /sterling /percent
/ampersand /quoteright /parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /exclamdown /equal /questiondown /question
/at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueID 5000828 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C423ABB972E042ABE8678A22E29992FD2D4F69A23FE0E41A649F4BE3FD8A2C5
F30FDBE25D745F0DE62C03875DB9984AE235F4D827D20C4E36D10C8433E1C2EE
ABC20A070F7DE5E88278D691262AD10F1F372C5016C21F0F952E0666AEFF54FD
72789E8BE87620A69F3F102122C52BBFB317E7A4BA4DEA117745DCCA90023F76
74DBD9C58EE97E435588B749CFB1CFD59EEBA7F5DC2C1BB8614BF8524B14273B
087958346BF4C4B8B877F6850C5D13503F892E2AD51850C81E31DC424E008D36
48C230C8DAE6E410EF89F61C4E6087B3CCE265D1B9CA8F039E9969CC04E0491B
B50ED4D6D27399B516B372D050288238FAC85333D961386F3C0BEB0B0E360A33
43249D4A6D0DE632B1C20CD382EB8EEC2982333428081F09F426BBCD599D0534
0C6A561DF3A56C054235CB5A713FDF71D55A3CF1254822B3585BBE6B544DEBC7
2AC06DBB214C1AF8D80A714FA9764D1F94A025EF53C533AF3B23E38AD2F1864A
73193383F1D1B4FDC80B0440E60D281347DA88BA688AB29747CD13CBBB1287AE
43E0E3B812AA12C8660DA217084DDF6CD3423E4024B96B1AAB70B122EC9C500F
22F47B8D73DB3DD6A31630C0AB581D0FE5ED500620AA3592E6E40AE2ECD0E49E
37761BD30E82F8914C4A7EE753FD2A6FD398AF034648976227E5A49DE22B10D9
BA4FE8000BBB5D6C21DB6EFD1A68EA0BB711D0077AFAECCB468A164587BFEDDE
6253DECBD08392BE3C646E167E6380F62B67DF8CFCF2CA826CA6D398A5D4A6D4
961E788B343B63BD8225B71D5FB3C16C59F1D6AC8A513E5DED53C604B859392B
7E3228B63A6343CEAF306C3B9AFEA9FCF2A54DF7241703E7D0CEC0FC5E90438B
FDACC5EDBEEFAE900D309DA89B49E6B9C866F7C586AEC50C13E70512457DC9BA
069F9E71EA9E68C98FA7F54E731330E7522A681F5D4E17E20F734CB91B3C3C18
C480C16B257879613E8D7D4E0DA8C65911F3495C2402C760C37E7C8222146908
57A52DCBD1610AC846496D4D733223DE84C7D8645F7433E6F31D808F66DDB751
859E85752080776CAA1437F9A67B5AC68F8829A58AC2FE934CBEB654B8EC720A
8544788D0704D146B775307E276EFE5BD2EA4F434A2FCB9A3E705835F51B6690
86475A0E88C8E41CAA90930CD267856A34636526BD4ACEF277BB27F0BEDDF1BB
DEE9262BA3510ED2A905928142E2031BBB7E86B8C81C53C39DE9F62AF69D8846
816E6695C65915D8C5BD12FEFB05613D341AAEF13E381F899040302EB30C7BEC
B10CD05BE000BCA617AD997AC032C5E0726DA134D7EF8979AB1B184D6F753217
1552526F62CF5B35638D7B5C15750F090133B30015A3D5CDA1DD76C3022E221D
61A6078BE3A7FA1F6826EB889E8411B287B7E97B2F9638D648B5CE364F44F300
04A09D0EFE8393072EE4EE8EC5B9741FDCCBCB3294A756FCE942591E1B9BA343
44E6919DB150DEAA8211C9C4E9D1991BC8E666B4D6B51686D6976C54D0B1E18F
6BC1119AE8E12BD32E386BB88E593A81E17405C18999534138A46602D9C2AF03
CFCE91C01D67659C89E12D28F853240EB6607F3AD933A843A38D0A94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6208BA8442C2FB5A
696E7E21859EBFBFA7CD4EB0C76171CA80918BB7B7101740C0BC82DB66852575
F0A73AFAC56EC980C4045BAFEBBA7B5939EDF6D38EB52A4B88828D97DCFDFF48
18C925FAFD5FC8CAE4AF1980E8F35CE170D31F2B1669F9839FA2646BDCC70E86
98B905B9CD7FE4F2F92D1127DB031F0A2F6E38A2A32415DA33C79E81684C7DDD
6E260679732A2D20D6BDE27B65F9176558D8B65362F61FD87D9D742336A93039
AF47F5F3FD6ED94DC2FD9C5DEB0FEC3581E275BC94ECEB7B517E88F6126B8A39
2F963B8186EE2454E318F5CC571A951409B0E69BB7A86971A05AF4F329B3BF19
7F1CE08A4D8635BC8BADD348D12AE567FF26A95D677617CAEE4CA4B282C8E1BC
D4D66958AA329DDE6CAB90B3FE38E49F75EC083CE8A49285A45B4BE4AAB05AF4
C971DE2097309D26995CDFC3B366F7A7F361F9470E8C548EDB3CA0CF7B4C1549
5B0944DAB553727A204C65A18A0AFA2C09BA5906BB5D4B098F3CC567E9DA9952
F5F95048B505DD5FA2650C07838E0D553E7E840AF3EA2B0E8D47E0252B74AC09
2A285AF9574D6391C93B9713965E2392693A338B3FC88BC2E1A043811D01AB47
5AD8FF6F8B61ADFEA7DB9D25F0BA34EA859BF991D0354BCAB97DA3AE30F5B38B
66F88795A54D463A07EAA36050E7E054635DF56106EE7EFA0BDED029D2273032
E1C8A5CD079AC68007642674E2484DD26EF8FD57ABE1C76066DBE4C55D5A1735
6BFF90E05A02F67ED69DA2E1D1953EA6D52EADEB8B77B8CA55DA0A2630460E8D
FDACCA77A62C90E3CB95FD8E266D6F49C4F473C99BCDB01673B4869412008E86
B7E3EB5FBECC224882E4A65B704D70B6EF914EEF7DC11DA14701A7042720CAA4
B6F1DB53E2F2A7B631185190BA7257564A9ACAF314FCA20E4B2FCECA51B01FFE
09C7759D0D56A015D88E4A4F4857C28C3AC97A795EA115176E9F6FBF5312A14B
81642F748069363D63B3E30EEC8BB285E989FFF2F525F987A4E0F5A4524E9ADA
3E1C33A91EBD2642191A5E9A5357173201F033136D4DDB127F710560AEF7190D
FFE80476DA24565CDDA1C5B675AB8C1040FFFB2B4DCC6D869462EAEFC6294795
45AEDADF898920348CE315F57C26A25A8BB71906E782BDBC9640D8D0F339D1A8
03C3A7154021AA4D5776CEE3246222758560744D22A17D36E5A61AECB12768E0
278805DD947B5E10828203E3F342D04C348EB3AED257F7F32539B2EE9291686D
844D8FFD500457A0B40FAD27A51383A8AC58D6DC04E891BB01AA7B5CB156F82C
B65B31F74927C448F153B618CA743B6DD5EC782AE81C51F54821887E589F169F
4FB84F6AC9478C45CC309FAA5AD1990D123FE713078BEF4D10168894BD4EE9EE
B1210EA67119954DECD736CACF1A48330A8D5D8ECAD413EF4ECD6A6EC193B294
FBDF9B4CD8468B1B6EAE13AF8F423130EC32EF3AF68CC1C3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS17
%!PS-AdobeFont-1.1: CMSS17 1.0
%%CreationDate: 1991 Aug 20 17:33:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-58 -250 939 758}readonly def
/UniqueID 5000805 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A14816D516A63DE166FBCFEA932
BF000C3B84394CB6E6A446D37717CF8AF9A27241D89E3EC12BBAA36A87DA0A50
B96DE87FD2565D6BB4225E150CDC8FBE654B16102FE8DF3BB5EB869ECD8E521D
74ADF974252C93C4FA50311485350B2EC0A92EAB44C9A8BB11852B3666C5F393
6BA5AE3D742F26EE549A603EC810A7528CDFC7D3A1580528936A7C291404D23C
A573D08407861ED401CA26626B04DC86EBB4547870BA7A03E49CAE3D0CA7BCD7
6C28C3A89BF4182CB84BBBDC9DDAA541448456EAEE89E87C488851D1235F3326
D866CED01587D10C2464C07E3DFB71E49317FCBCE83A4B85F2B7E544BFB398B8
5BD9355CCF9088DB5108E011959AC68F9A3773B17656F85521618D608D9F6450
BC4EA327B03E999BA05A16CFC2234F388EE7463AACF02EA3A45D5E65805C7ED9
4618D5A8669FF3ABAF8B41D76D11F4AC0DB848BA8A5D51CCD6D85EB6BEA99A54
80CA3DD9B7E9832296073E66AA9697E86758256A063934E0B30425BEB569D9A7
C37604DF22CD0A369EE007F67CFF5A930B5F77EA030E547DC635869BE5905270
09C91AEB22772C01412D78965DD2B489B4C4DF35FADD130DF1FCD2C59D0974E1
4C161E5FF72F790700E0439032D0240542B702A7520469411C6809C27B3AA535
A5ECD235FB90601C6492C6C3D2D38AB999445474D7E788097E247DE495BAF83A
7F1C70DD205967B579F69E764F4DDDE56AAC3D87CB837EADF755DB85B88EF041
AC4F754DE77B66B0471384EFEBF9D67DF6626338DE3D4C65A1831032D36C0B8D
C60513EA65E9AD53E4F1F1AE4F6DB85E249AC53396FF5DB2189F37D359DF0AC5
9369E07ACC443314B1A13CBCDC48DC2F95896CE74E346E7E94D94DB6A52BDE8B
97F24A05DD1199F09C498ABA75BE956DE4C46CE436CBE2E0E8272ACC0B60DF43
A54A615C3B821AA25E123DEC9F627FD2F59F4CCBE36F957C0B4D4F82ABCB19AD
CAB4EF9ACFCDF561C26C58F242F3712183C9303CCBB2A85ACD225D588604E34D
71A23079026025637CE11A57502B0B2CC43CD5377F91813AD63527F40050403F
FE9AF2FA7CA2B5C553A2536187BDD6CFEA5624BBA5C93A8729D64BA91B6360F1
0C668C8DEB46DCE9E11D2437801050315E6C26536887BDCFD6EFAD0E77DD3B6B
AB41C9C2ADEA57C58FC8E8101F7F26F28ED8C574ADA889125E6D279F43255D89
E548BCBD86F8C5DD66A8DCA799D32D78C72F62990B2C56E4D650A24263F26702
D896F85FE3CBE24D6A5FF3B14EB630AD4FD38B132D000EB72D2DAC71BD014CD1
55A7E64D31DFA3646AA2513E7BC4D777BF8027DEE71759B5106B67C284E255B1
EA2FB84A5A346097BA8B7D8173313F6CEA776233328C1681D149C226A150C231
ADECA234DB9C828B789A89F565F2792CF37CF04B4F82D14C8179E6D2B4220E2C
44D16CCAB7A841448DF09DE359CACB3DECCDE172797A1A2B340C792C1FC7D7F6
E714EA8BA48A0871C82370475DAC5478787B0DBACF0F26328D4EFBFD96550AD9
D61C6CC52ABD55A77F78331DBB13F6CA0B198F5112211D5460CA398A8A8A745A
26460C4E6CD78D2560DDAAA8967EBEF003C464A92A9CE2539EF1356129A1B3DF
566FEE449ED782A6598706691DFB2CF5A663684AF28825EA8FE1B442BF7BA6CA
AB98E79CB5BE569EEE61F690CBF50E1AC67DC529352885F24136CB5E7EEEDB64
362683EBDAC5CEC36C512350255F165F0D70B5DA721F7114BBC1A394F6534BE6
6BCA783487F096C3600DCCD099D86CE0324B11BCA73D70B999E5730C84778553
AA54C90618FA36696D2A324DBF4D772D8FC3C2D77112B675E552E69A5EB13572
42C92CB3FB7E4B34AE6EF0B37FF687294DD35A545E88AD394E9685BE6C8476B0
8D229D901F3DAE1AAB105578F25438078DB2ED189FA5E4ED808D216AB327025A
C4E7949B1592D023E7914B55E8799CCBDF0608C49AFCC19ABC12A961C7D5EE46
8D0EA2000519D6A396BCA383009D4C5D49D23798AAE38412E65658C24296A19E
F1107CEC9B724D1D01ABADE05E5F3C2BC0E18BD64B76A1E24C9A37F00714B365
10386445DF4680FC2857762582765F8F5681CC6C6A33087A0760062ED56BFC5E
D6B3E5E98680362EFD8447E88C6E62DCB73B06EDEEF7F3709E76ED1108B6298D
5F449EF46D6D195DCFBD975203A21E6A732B86C4B2A8889DB402CFBF0FE95A3D
B2E1E563E0D86C42ABA4852AA32AD7A21F90D76DA58DE401ABCB595F2671D6DE
4674773B4435E452D0484EF2C79EBDA85F02AD1B3B482492F2EE6BD4CF4BDEF3
D2D1634A1CC64324DF77DF62800186ACD058E2A982EE1224500D28031E98C913
E56673C8AF61228E653F7F4591CDCFA0CC666710106A7A7D35AE63F91234B7E2
7429975209D871F4B24FB87285F6695930B8AA5C9D65EDBF6C10D87A93CF3D44
C17D46DAE659E9643B8D67B493856A975C51B84EE809173F8E0FEE0E24393D3C
7934664188075E7F150D6612806225BEAFE1DF260C5113844C22F08C39E1D74B
FE2A130AEC42BEF043873FC18228FD0C16CEF07B828C28E766F3893A5A63C8AD
73BC1273493078343135161BC91A0E03C35678B897ACF80C053E79C2A7FC28FD
B9B6FB0F6C92672B3F93C1250EDFF7B0DFF67992CDA65C7F3B2E80583D0B7420
A954991AED66097BB83E7E396E3D111985C3006F3331EB0864322FF50FFBEFAB
DB377D5C7F8F6071FA2C6610C3CF7B5BECCA7506E03F0E17A385EB2CFE125042
D0DC8C4E631A86FF75A28B922CF7B38363873429AC1663B8FAFBC265F2F1A198
6277745733C55FACF151851868F68151BE4CCEF317143071513D1930BB74B04A
64D238649B0E2E0E3D6AC084D02F2632AC4CB9BFAD20AE30EDCB4CEC4A4C32B2
8433F1C6693BC9F440DF3ABC499B6372485E4B43E17574BD35AE0FBE2911520A
14098C8BF9D06091FD55A0EE9BA7AB2A146DB67106B64D62A852392DAE7A2B53
2A47AFB2FA26DD9AAAECE9E13BDF97BC24DB08CFE1E115528EC2B9837FDA7E96
C1564D86ACEA87583BFE79D185880B8A897A1FA27CE7A614EC81BCD5315E74F9
92A7D70582763B450968DD2C23311D9D0285C55D42D2BC7FF661787ACE01BD30
8193CC31FC166E6AFD6FEB9798E15F9BD925489DFFF9A2FE14565364CB5118B0
129C193E00CCA5A8CEA39A07B5383EE9838A0D48F5DC2A9A966C9EE307D9D472
D0E54FB32DB9DDF943E438075EC6BB7DBA22A2C030E4B4E04ED07FB26084FB54
02DA178A856486920AFE3BC27EA3DF1A90792192B67236AA2A535CDD3175002A
4211442CCE4A014AC50E292A1349541A20D998D9976451BF8726DABE236D4200
7F4278B24104C18102139409D59F64CBEB54F370A17E9E97A8D3207FAFFF3C04
2C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124DFAE11BA4AB27032F02AB84277DB8B54826CFAED7A16204643B80C4
17211166E3146B520E458ED58EACF4F24E79AD0297AAC76C7B11F61C20A0CD05
C214194F095409912AE8BD4F1CE9027356018031EB6569361244A470391108A6
5337085F18525DF11A05D1A1938565197067F4910C2291C8D2D877676B573C1B
98BD928308D2394E7AB443C9E85C402EEEF853ED205776CD198F0B8226A2D66A
1FA9E1993595DE7F29F4C7343DB09B11096BD22C43E34ACF88C1D439BCDB77F3
B479046252A179246227B62B90E86759349C1E91AF379FB1C5DA9B630AB0A146
9C7BD0C1262212B89229AC757B879CF1AF0CA25C46EA9239F7530C24785D6791
EF3FDD7CB7C2A23D3D12C5DC0F95AA057BFB5AF3BF6D4918EC81ED81EFD3071A
7D6063D41DEA15283C968B5A2C66B852A22F52EB2D7C6DE004DD188228A74743
FBBB3E0253F451B8548217BD393795A196DD7D559E148B39D9CDA82F73956F98
E8F0DAD8C4D2906E9B505ADF690503AA0D8560F5E31B8271A62C5DA0588878DD
FBC1C4BACE629580F559B1BCDCBAD66AB18B15F15323949110BAD5C9CC2DD173
754774402B6FA6498E5393CEBB068416585D32B01C3A70A3BB41253209F7F727
537F86600EF52F4756108885D31A836583995BFD3171CD592288214F68C3B955
9E8873DC4F7302F4B83836793EB77A7B9D07BCA2D00B40E53283C60EEBE8F149
AB57497F796E7CE046156A4DED3EE8DA46B32A96C2E06990D7E2552B49BA5904
CAF1D6EA8270AFDD7E83375244E629F9F36774785C3EC66023DFF16EE79F39A2
01DCBC7E502A079B71B8AD020B56E3FE6F7D0D2B802AA6096BC21E2940BBD448
1438C5CC7787124EC1B30B542C3C1BED147A402C453E9AF00A03598685C7BB6F
2551FDC125E70C7FECB008CCC30BB35F147AC268F59C44EF8003B76072BFE5E7
AB699DA57C7D0DF6DCDCDBE0EA68E05B41D4B311F34D5F4B68302591DF48A81A
84ACA0E28EA242891C17702EA74712CEC7FDB6011D0C44097487EB4DAC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B86FECDA8944
AA3B20AD6019056E01677B959B23107F1962AB2CF6A52AB2745FDD5383ABAC44
22F83D93327D560012C565E49F2EEC04A6EEBA9D605FBD223B59CD8DE300A5CA
3790E9B4CF846CF5AE93B687F3D3EA411CAC0F03C47ADF9D83887702475E36A6
9FDA88B48C6FBF07959EF4C6F61741CDC2D503CB8AA0135458716D07D1774C21
750D01533D7CC822892EB494A82295E9537CF478A381CA7146A6BCDB1FD833E1
4D59DEA7DE0D1976AC7B448C17861ADB891766639B6F06B1CF3B56FC847D6C37
606C5D8EF98FA61D8943C404756BFBD2F87ADEB2DA92585C7521D88F486F5DCC
92ED93565808705D38E9DB085661B771872CBAE4DA363A02669E99EF1AD09E50
636CFF7172E5EBFB1DC08E76123FD5E5D60D76DB7A5DDBA4F32521A4543169B9
8825E3F2A124A1CDF79BC32262897100B0BEE618A92806BBFB7C1522821547BB
7D97346A3FFFDEB9A36068828431810D0640D0F3F07D8EBC8F1A952BFB809BF7
E54C0444110A1EE0BC7392CCE28224C70E6872A8C91DE82508094E3418C02118
5507AD925037FC20ECBEAB31D84929D5C6A0720FBB3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3A307A1A4455646E1F
B73047F2C36AB0DE64B2660795139BF3E491E7329C6804B62E7607010C423008
37F93F3851E472BD8F6D8DD9DFC1577C04A9531F8BEF1154F701F3FE438FD25D
0B9C4EB4E2132F3094A166D7D2D3D877B0447947E929A44135D567DFC946AC97
E6EDD4B4ED1204D5D2402C351212FC96C0EACEF4222FD9A271D0C3DB27CEA5D1
81D7E6BEDC9CE8937288DBC4F96661C812D31312FDBD0E680C6EEF544CCF26CD
B6FF82F3378CB493CA2527D51AA87E3A80D75383603152011530B8ABD2294D0E
60C55FDEB881EF5212133C9FD7C7BBC8675CE57FAE119EF37404C17535023E73
FD32A1EF0C659555FBFE6D9582A7DD2A35828301408B25709FA7CC2A6258B759
24199D0B7A5547947DC1BB9D24782DA5E78890DA1B1B82FD8797EEEB29846B6D
B84DEFD0C7F2FDA61D1056E8D567AFE76F964B9F717BD287A94CF9CFEA668F9B
6380CAE5E75DF3B8B749E7052BFF9D02D39133E848BA45FBD6DA80780B7F07B1
5BA28781C1F3745C814CDC1C8E8352C970962A6C9D261636506E2AFDEB9AFE72
EF9AB5315EE78272C543FDED360191CEC83FEF61D2894CAA4AD7BBB0F287460E
60E88B89FFD65756023DFDF9ED71D4E41598D5D59389340D67B1EE8DB4088760
48521F937A458A63396A578F02131547936110591341EE1E896557C5D491FFD9
C5ECAC8E55DE051D364FA41B7577457D6C49DBBAE9E7843269320F369DB77AF7
5DF6E73CB25E3E15458E7F703D2377C1B721340E3C283EF9BDDA9448283E6E54
7DFFAFA5F22D09ADCB8EF3919F900537FD998C92F1AD684C98C7E790542BD916
8FB416FF8AE69110CF6360A8CD13FA687EA0507C118EE09C0DFE3D3B3B0BEA11
61BE49E96DB2F80E6C17624E97F8035582667799D7B99A1DB2A7E90EF9321663
2AD737D6154D21C248E82673482BD068DC467E6C02097183EAE33471B7B183C7
AD8229EBB779EBEA4237E5FE932399B4C0C3BE251547DE5A6E4D5CD60D73C5EC
91557783F026804A22F64BACFA4165218FE15C91ADD99FACA443CBE3D2A73668
7E6C109D16B384F425AB1449FD994654170F94AF7671AA1683DDB81D5A42BC4C
83F4F3078573D2785EC16593F6BA2AAA07AE7B01D1CB27CC7D5EF3830A61E4C0
BB9DDA5A860373E195542073CF663FD439CDA96686EDA473355D2E610E615965
258984D1F02B5F37389F0B890E407F24BAC300AB2A0E1F033AE979B3DBFBA79E
56B86D32F1F98C3A08C2FF5074F0DF52348B9B4E830906E73C474B7B1DD02685
6BAA202AEB7A75F1FE1B4CAD80CD179DEDB4381F87400C06A873150BBEC632E1
486F984E767E5FB7B6FCAABAA89CC25BBE5E55CEDE07B61521F9DEC925EA469D
04EA40EE5156F4E5FE0ED9EB0E03602178225F0C3D17F040AAE032984A436B35
A9B92B10845B812E48913CA1CBDC3E6DA7E8BB48D9E189F83B0ABFD93FC16990
16B4ACC679A25CE3F6723C39B47B7E38EC3C4405EED6F94BB3099BFF28F2D3CE
CDC1FADCCABC4376CB7D2D3DA8ACDAC45DF9F31156AF6369CA24633045A674C0
39C840ECB81628F027CB0507D43D8E2B784AFA09D5E9A90FD8DA44504E8EFA92
5AC34E3D9867894131B63D6016229530B8885DA254073EF53CBDB551AF86B9DD
3A64129EF326478DD05ECA88BEB9A90B6B568010B2EAE1BDC765DB3EE4A8A522
EBCF6325D2C3206C3474236D09C6AB4ABAD030F44CA12EDE1AF3B92640067AEF
4FC1820B4C61EA55DF80353EE1395577DBC1BFA0F1CCDC0D1EE7A7CDC9163896
ECB86829B0EF4259B78D95823411E68F144A1BDE1BB990624DD50211FF6DC749
7FED7C6E58490E71C0050AEFA271457FA44180AE7D65B95423A538D1CE734692
BDE461CDA38E532AC2A8886E25FFBAC3B6CC41EB9DEDF9A187AD0476F93C5B48
B1B0DA8E44E1F25DF783D207274D6037CF48BEE061CDD2B349A47468BC27AC2D
B648A12CC8B340F3A3B66838F8264E024F36B3DF6ADBD204D1D7FECBEB63F9C5
46F9AB50F00030008F3D13F5CBB9A1FD17E678F4A624617402E76AA86C51D56B
91A8B0ED11F68D95DEC5914A2F6E41E8B85174F6CC2A8C915BE91866EB920559
0216825D9EB988D8AA68FDE0C4849DC87857F86E8EADC4F51F2F1DD2026B2961
3686325C3946674A6FB0F40E90ECA4ABA6ED74F7D1C2309D7C3F72B81D016216
F5933D4B94B56423DDE3A4A41AAE590504BA8665D2620AB69AD406AD521063AB
727CB9989442F3B083786897824A6AC78FB654043F34B6FD53F8D55720960A2B
E9B5CB849BE442C89068BD076E8A1EE2D9B08D44AA18B9035F32925686A77889
D318C53CBCDCEBA5E1E397039623855AADDC3B59225D764BE89DC4AE8AFBA74C
051BF8A4DD6A47D6CC3A7EAD3CFD5E05B2EC9D32278BD85C8596257AF04EF41C
8D7B7A7275392765DE4DA395F7F61846E628507D3B6F80699A98A9AEB283A377
2D87FE27879B4F53DFB2FE7D9896D4CBFF10E285E7D32B149FDFA0C489FBBF84
D9AFC4CD14FFE4B8B9BAADBAE296CF12159FE982D4DDFC58B142A088BB9E5C63
C537AED8E3810BAD21413E35E7946C643A070F05D07305FBF339F8C3E3F0B655
AD52E56EC9F12D8F8C537F4E3C486E20C6861AD3D51C603A0F6540373D613691
89CFE2BA475C0929B2FE46C4906BECDE894A50C502500387595863213D97570D
AFD8347DE390E61065417B7CDF800D9603FFA66F4D2BD1CFC53845B4B95077C0
1D697D88FB54A83D934BD4C80181A2F9BE9BACB35B47A9BEC744DA03CEA130B9
E0D2E5A75EC21119B994BD9C1A9A3634DBFBC091BF020D893E5CB06E24B053B9
84C61FC749E4D53440C2EDF381464A0370AEEB36997B953EED04C53B8015055B
1081C75F6D88FC9E04B5F9FC8A4D3B04CC24B0F85E66D30BBBF8ABD4DCD60728
84968804401816EFF92A8351CB45C6543068AC565405A6DC3902B18A215918D9
E7B3586478CCF3D403A6A9D60116935CCA8832ED6C888B4160079293923EA0A9
86658A09AB7754FC3668CB9B90FAE9543E5B2EE9EDF00C4B28014E6CAF91A298
D78A823974ADE4B00437BBFC2C32E97F07FF9187C573F8F40A556CE2823BC444
2DF59675BA6777E9EA7F3D89CE0BF5CB5A2AF830BF5F58B6BB79C025198B6D4E
B7BFC705F3543793C7CB22E73517F370027E52E287AF201DA391ECD88C2E6DA9
B3FA0DEE04651AF433C1C758279560544389F781F6BCB38E049A86B42E56B5F0
9700B8863B19ED0CB7C62DEC43CED029BD334E8D717F82B70C5913FDEA87F361
B5D331D4D5C8557BCF9AA9B6ABC9EBB0609AEFCA0A892A2A2713B90F06F05581
49265C15BE5D45C89553E9F4A1090776ADD0546D0F764543AC8E30FBB87E9A85
1B72AE469E38F58A5B08FB5C3367C0723F0D7FB4194C37ECB1A1303ECF4357E4
741E45A0A74FECD7C34FFF6AC6F6AB8171136123B3F65C28E972FE08DA8AA40D
852896D878F83521A66C41B69609F65EA3FC2922A693F7F40C47310E2775FC04
FCE85B38836E247F0E1F1F6401578BD30BE50B07B2DC1775C3F8B2F5E5F2A627
F2C0817A9D722EB17B4923E9F7EA56315E5CE2B555A53D1A64CDD9660DEC05BC
0955FB065E22CA76FEE6DC556A7CB579A2FC487DAC885DFD4CED64FB20C9BD9A
8425EFD76B5B0135EA7112CFA472B3B0DEA08C3EAAA259E3B12D75463C1523F3
1D1CE14DCDE2C5F40DED581F5AB9D327760225CF654D5D5A4DA0A5F7692E968F
8D5D2AAC5A3716B15F362CF779E4FB1B3FF2A0BB1A5F818C270CC29C94709BA0
DF03A9161A3A5D999FFFC761C155896480A4FD0458F2921E1157D05DEFEB68CF
D82CD9FA1EEB8D29AAD63FE55303F14D023F8EEEED5D87EF8DAB52FC719A9165
AB0B50370700B3ADC089D0A4B7D0B6DF3C84E2B1DFFA7CD49835CD14600D93FF
EBD1699B6F57D0A229913880B7E98ED05C8BEC875551A8193CA76C62B144EAC3
1D0B32BF759BE79BD9494288FC9653488CC3EC42699C52B63EF0C41CED107A0B
8BCD67F4156C6CDF4D633B63E69176553A9551F79C9D10A48E976266AFA19284
8FB51488C5AEB4EF27A0B2BD626D4679A63514C057EC7D82C45B8430FE1DD4B6
C7851E287D4894BAA4551CF89A8AFBCB2DAB3B54711F11129C628E819B81D43E
A1943C418FFF53B3D8A10127FE8C4E24FCFBE3710E4E63E74D43985643BF4156
6B4790BFC577289880142F5C7D30C91136ECEE621D8E2CE807E3A68F7533CD59
350CB3EE6C1080F7733378FD0EAD865B0700AE53A8F2CE4A575D7D2F8858D8D1
0ACBD6EE0D1B7087B6572FF3DB217757F4490BD50F9585F5C9AB1F6995BC8C03
E1C386FD0C85CB238443B2D510C91E6CD890F59ADA4B6EF172BBD33B3A12CD03
81C0398FE912A312BEC11577F41233D6450AA6808C910ADDDBFCC01040ACBE86
AFB1F679D70C43CA5A7A1C8A2E6B451B89DD9BFE406CDFA6C763494927252D98
EF11188969DDDD80EE6248C05593DDB3E26DF914A22A26C53682542BB0DA8FB2
B227FA38DEB51C9629C43FFDEBEB74C731626337559AAFB929EA00356248185D
05F815EADAE316F063F1AED99CDA7B9D693247FBFC8E1A243EBC3BCC13CBF06E
B0F8DB97014133C545F2038111170257FECE7F7BAE7F01B33FECD1376C3B8101
130183CCEDAE6B27B4B4146435415929BCC80FFE1E1B64EDFCA0E33A23BE96F2
C8E4BF889D17A3366CAECEE36DDCDEE3E101720F2910D3CBD4A3C641FE068FCE
121A05725D6CE9F8FCA7DEB3F0A493E31712DBEADE679E31A616A283D38E6CBF
F09DDF2ECEFEFE26DF8A093CF76B08A96907B464502622CCBD7E8926BD767FDD
492EC54928BCF7B4E6C788698EEDB13FB606E7838463069D3CC0D5830E9B70C3
3184AD1861D0594EBDE526F92E96AAF15D20DE55A2ABEE844D984B84CF1BD123
63A2309654A62738A5DECB93AFEBB8020233E02DB5C1F08AC50C3E357BD8CC74
C941C63CC2A511C8F6C7840914F13F7A83D74908BD29A41F3D5FE916B62CA9BC
D7E4C1FC81A761ADED9A8D83195614644905D7FA1DD2C7C9E2FA995182FA6F34
94DB799525E3B656450EACEADDAE50C747DBB656650334B07FC39B2605BE76FC

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (promoter.dvi)
@start /Fa 145[51 6[42 1[42 101[{ TeX74afc74cEncoding ReEncodeFont }3
90.9091 /CMTI10 rf /Fb 171[73 58 83[{ TeXf7b6d320Encoding ReEncodeFont }
2 90.9091 /CMBX10 rf /Fc 139[58 62 55 1[83 81 83 128
4[83 2[72 1[72 1[78 11[111 4[103 10[97 1[103 67[{
 TeXf7b6d320Encoding ReEncodeFont }15 172.188 /CMSS17
rf /Fd 145[43 62 109[{ TeXaae443f0Encoding ReEncodeFont }2
66.4176 /CMMI8 rf /Fe 205[35 35 49[{ TeXf7b6d320Encoding ReEncodeFont }
2 66.4176 /CMR8 rf /Ff 135[48 8[45 12[51 12[68 66 1[67
1[62 1[68 4[33 68 2[62 3[68 11[45 2[45 45 45 4[71 43[{
 TeXf7b6d320Encoding ReEncodeFont }17 90.9091 /CMR10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black 3725 -174 a Ff(1)p Black
Black Black Black 97 4187 a
 tx@Dict begin CP CP translate 0.75  0.75  scale NET  end
 97 4187 a 31 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 14.22636 SLW 0.00 0.80 0.80 0.00  setcmykcolor
 /ArrowA { moveto } def /ArrowB { } def [ 625.96036 170.71646 -56.90549
170.71646  /Lineto /lineto load def false Line  gsave 14.22636 SLW
0.00 0.80 0.80 0.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 14.22636 SLW 0.60 0.00 0.60 0.00  setcmykcolor
 /ArrowA { moveto } def /ArrowB { } def [ 625.96036 170.71646 554.82849
170.71646  /Lineto /lineto load def false Line  gsave 14.22636 SLW
0.60 0.00 0.60 0.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.84526 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 0.0 142.26372 142.26372 199.1692 .5 Frame  gsave 0.00 0.30
0.80 0.00  setcmykcolor fill grestore gsave 2.84526 SLW 0.00 0.00 0.00
1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.42262 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 21.33955 149.37689 49.7923 192.05602 .5 Frame  gsave 0.00
0.00 0.00 0.00  setcmykcolor fill grestore gsave 1.42262 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.42262 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 56.90549 149.37689 85.35823 192.05602 .5 Frame  gsave 0.00
0.00 0.00 0.00  setcmykcolor fill grestore gsave 1.42262 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.42262 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 92.4714 149.37689 120.92415 192.05602 .5 Frame  gsave 0.00
0.00 0.00 0.00  setcmykcolor fill grestore gsave 1.42262 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.84526 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 256.07469 142.26372 398.33841 199.1692 .5 Frame  gsave 0.00
0.30 0.80 0.00  setcmykcolor fill grestore gsave 2.84526 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.42262 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 277.41425 149.37689 305.86699 192.05602 .5 Frame  gsave 0.00
0.00 0.00 0.00  setcmykcolor fill grestore gsave 1.42262 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.42262 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 312.98018 149.37689 341.43292 192.05602 .5 Frame  gsave 0.00
0.00 0.00 0.00  setcmykcolor fill grestore gsave 1.42262 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.42262 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 348.5461 149.37689 376.99884 192.05602 .5 Frame  gsave 0.00
0.00 0.00 0.00  setcmykcolor fill grestore gsave 1.42262 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 2.84526 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 455.2439 142.26372 483.69664 199.1692 .5 Frame  gsave 0.00
0.30 0.80 0.00  setcmykcolor fill grestore gsave 2.84526 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.84526 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 0. true 526.37575 142.26372 554.82849 199.1692 .5 Frame  gsave 0.00
0.30 0.80 0.00  setcmykcolor fill grestore gsave 2.84526 SLW 0.00 0.00
0.00 1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial 2445 2498 a Ff(UPE)2637
2512 y Fe(1)2752 2498 y Ff(UPE)2944 2512 y Fe(2)3032
2498 y Ff(UPE)3224 2512 y Fd(n)316 2498 y Ff(ENH)514
2512 y Fe(1)623 2498 y Ff(ENH)821 2512 y Fe(2)893 2498
y Ff(ENH)1091 2512 y Fd(m)3816 2506 y Ff(T)-8 b(A)g(T)g(A)31
b(b)s(o)m(x)210 b(INR)30 b(b)s(o)m(x)128 4187 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.84526 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5
2. Arrow  EndArrow  } def [ 569.05487 256.07469 441.01752 256.07469
 /Lineto /lineto load def false Line  gsave 2.84526 SLW 0.00 0.00 0.00
1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial 2175 1868 a Fc(Upstream)55 b(Promoter)128
4187 y @beginspecial @setspecial
 tx@Dict begin STP newpath 2.84526 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5
2. Arrow  EndArrow  } def [ 398.33841 256.07469 256.07469 256.07469
 /Lineto /lineto load def false Line  gsave 2.84526 SLW 0.00 0.00 0.00
1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial 3822 1884
a(Co)l(re)f(Promoter)128 4187 y @beginspecial @setspecial
 tx@Dict begin STP newpath 2.84526 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5
2. Arrow  EndArrow  } def [ 142.26372 256.07469 0.0 256.07469  /Lineto
/lineto load def false Line  gsave 2.84526 SLW 0.00 0.00 0.00 1.00
 setcmykcolor 0 setlinecap stroke  grestore end


@endspecial 405 1884 a(Enhancer)128 4187 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.7113 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { moveto } def /ArrowB { } def [ 540.60213 28.45274 540.60213
227.62195  /Lineto /lineto load def false Line  gsave 0.7113 SLW 0.00
0.00 0.00 1.00  setcmykcolor 5.0 3.0 0 0 add DashLine  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.7113 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 moveto } def /ArrowB { } def [ 540.60213 113.81097 526.37575 113.81097
 /Lineto /lineto load def false Line  gsave 0.7113 SLW 0.00 0.00 0.00
1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.7113 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 moveto } def /ArrowB { } def [ 540.60213 85.35823 455.2439 85.35823
 /Lineto /lineto load def false Line  gsave 0.7113 SLW 0.00 0.00 0.00
1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.7113 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 moveto } def /ArrowB { } def [ 540.60213 56.90549 256.07469 56.90549
 /Lineto /lineto load def false Line  gsave 0.7113 SLW 0.00 0.00 0.00
1.00  setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.7113 SLW 0.00 0.00 0.00 1.00  setcmykcolor
 /ArrowA { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 moveto } def /ArrowB { } def [ 540.60213 28.45274 0.0 28.45274  /Lineto
/lineto load def false Line  gsave 0.7113 SLW 0.00 0.00 0.00 1.00 
setcmykcolor 0 setlinecap stroke  grestore end
 
@endspecial
4487 3208 a Ff(+1)4181 3445 y(+25)3331 3681 y(+200)2364
3917 y(+2000)4521 2210 y Fb(TSS)4997 2662 y Fa(gene)97
4187 y
 tx@Dict begin CP CP translate 1 0.75 div 1 0.75 div scale NET  end
 97 4187 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
